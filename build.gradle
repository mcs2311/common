/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id 'java'
    id 'maven-publish'
	id "com.github.johnrengelman.shadow" version "5.2.0"
}


repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}


dependencies {
		implementation 'ch.qos.logback:logback-core:1.3.0-alpha5'
		implementation 'ch.qos.logback:logback-classic:1.3.0-alpha5'
		implementation 'ch.qos.logback:logback-access:1.3.0-alpha5'
		implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
		implementation 'org.slf4j:slf4j-jdk14:1.8.0-beta4'

		implementation 'commons-cli:commons-cli:1.4'
    	implementation 'org.apache.commons:commons-lang3:3.10'
    	implementation 'org.apache.commons:commons-lang3:3.10'
    	implementation 'org.apache.commons:commons-math3:3.6.1'


		implementation 'com.fasterxml.jackson.core:jackson-core:2.10.3'
		implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.3'
		implementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.3'
		implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.10.3'
		implementation 'com.opencsv:opencsv:5.1'
		implementation 'org.ini4j:ini4j:0.5.4'
		implementation 'org.jline:jline:3.15.0'

//		implementation 'org.web3j:crypto:4.5.17'
		implementation 'com.esotericsoftware:kryo:5.0.0-RC5'
		implementation 'org.ocpsoft.prettytime:prettytime:4.0.2.Final'

		implementation 'io.reactivex.rxjava3:rxjava:3.0.4'
//		implementation 'org.aspectj:aspectjrt:1.9.5'
//		implementation 'org.aspectj:aspectjweaver:1.9.5'
//		implementation 'org.springframework:spring-aspects:5.2.6.RELEASE'

}

group = 'codex'
version = '0.1.0'
sourceCompatibility = '14'


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task copyJarToLibs1(type: Copy) {
    from shadowJar
    into "/Users/marius/.xbit/libs/"
}

task copyJarToLibs2(type: Copy) {
    from shadowJar
    into "/Users/marius/.waves/libs/"
}


shadowJar {
    archiveName = "$baseName-$version.$extension"
}

build.dependsOn copyJarToLibs1
build.dependsOn copyJarToLibs2


//project.gradle.startParameter.excludedTaskNames.add('processResources')
project.gradle.startParameter.excludedTaskNames.add('javadoc')
project.gradle.startParameter.excludedTaskNames.add('compileTestJava')
project.gradle.startParameter.excludedTaskNames.add('processTestResources')
project.gradle.startParameter.excludedTaskNames.add('testClasses')
project.gradle.startParameter.excludedTaskNames.add('test')
project.gradle.startParameter.excludedTaskNames.add('check')
