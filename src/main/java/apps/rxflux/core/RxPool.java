//-------------------------------------------------------------------------------------
package codex.common.apps.rxflux.core;
//-------------------------------------------------------------------------------------
import java.io.*;
import java.net.*;
import java.time.*;
import java.util.*;

import io.reactivex.rxjava3.core.*;
import io.reactivex.rxjava3.schedulers.*;

import codex.common.utils.*;
import codex.common.apps.rxbasics.*;
import codex.common.apps.rxflux.core.*;
import codex.common.apps.rxflux.events.*;
import codex.common.apps.rxflux.messages.*;
import codex.common.apps.rxflux.components.common.*;
import codex.common.apps.rxflux.components.stack.l9.*;

//-------------------------------------------------------------------------------------
public interface RxPool extends FlowableOnSubscribe<RxFlux> {
//-------------------------------------------------------------------------------------
	public static RxPool createPool(Debug _debug){
		return createPool(_debug, -1);
	}
	
//-------------------------------------------------------------------------------------
	public static RxPool createPool(Debug _debug, int _listeningPort){
		RxPool _rxPool = new L9_RxFlux_Pool(_debug, _listeningPort);
		_rxPool.load();
		return _rxPool;
	}

//-------------------------------------------------------------------------------------
	public RxPool duplicate();
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
	public void subscribe(FlowableEmitter<RxFlux> _emitter);
//-------------------------------------------------------------------------------------
	public Flowable<RxFlux> getFluxes();
//-------------------------------------------------------------------------------------
	public RxFlux getFlux(String _name);
//-------------------------------------------------------------------------------------
	public RxFlux getFluxNonBlocking(String _name);
//-------------------------------------------------------------------------------------
	public List<RxFlux> getActiveFluxes();
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
    public void open(String _host, int _port);
//-------------------------------------------------------------------------------------
    public RxFlux create(String _name);
//-------------------------------------------------------------------------------------
    public void remove(RxFlux _rxFlux);
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
    public void load();
//-------------------------------------------------------------------------------------
    public void save();
//-------------------------------------------------------------------------------------
}
//-------------------------------------------------------------------------------------
